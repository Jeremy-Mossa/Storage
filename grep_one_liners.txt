# This file assumes `$ cat some_file | grep ` used as the general one-liner

# Print lines containing <some_string> in <filename>
grep some_string filename

# Case insensitive search
grep -i some_string filename

# Matches for strings at the beginning of a line 
grep ^some_string filename

# Matches for strings at the end of a line 
grep some_string$ filename

# Matches for strings recursively in dir
grep -R some_string dir/

# Count the number of empty lines
# ^ character matches the beginning of line and
# $ character matches the end of line
grep -c ^$

# Grep for string_one OR string_two
grep -E 'string_one|string_two'
grep 'string_one\|string_two'

# Return only integers
# -o option to only print matched parts of 
# lines, rather than the full line of text
# [0-9]* zero or more occurences of digits 0-9
# '\d*' is the perl compatible regex of above (\d for digits)
grep -o [0-9]*
grep -oP '\d*'

# According to number of digits greater 
# than or equal to the number in curly braces
grep '[0-9]\{3\}'
grep -E '[0-9]{3}'
grep -P '\d{3}'

# Only IP (V4) addresses 
grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'
grep -Po '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}'

# Only lines with whole word 'foo' not
# including a word such as 'footer'
# regex uses '\bfoo\b'
grep -w foo
grep '\bfoo\b'

# <n> lines before and after a match
# Print the match, and
# -A 3 for 3 lines after a match
# -B 2 for 2 lines before a match
# -C 4 for 4 lines both before and
# after a match
grep -wA 3 foo
grep -wB 2 foo
grep -wC 4 foo

# Exclude lines based on character or pattern
# Exlude lines containing foo
grep -v foo

# Disk devices in /dev dir
ls /dev | grep -E '(s|h)d[a-z]'
